#!/usr/bin/env bash
#==============================================================================
# AKLO - VERSION FINALE STABLE ET MODULAIRE
#==============================================================================

# --- INITIALISATION SÉCURISÉE DU CHEMIN ---
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
AKLO_PROJECT_ROOT=$(cd "${SCRIPT_DIR}/../.." && pwd)
export AKLO_PROJECT_ROOT
export AKLO_CACHE_DIR="${AKLO_PROJECT_ROOT}/aklo/.aklo_cache"

# --- DISPATCHER PRINCIPAL ---
main() {
    local command_name="$1"
    if [ -z "$command_name" ]; then
        echo "Usage: aklo <command> [args...]"
        exit 1
    fi

    # 1. Charger le classifieur, qui est le seul module toujours nécessaire
    source "${AKLO_PROJECT_ROOT}/aklo/modules/core/command_classifier.sh"

    # 2. Déterminer le profil et les modules requis
    local profile
    profile=$(classify_command "$command_name")
    
    local modules_to_load
    modules_to_load=$(get_required_modules "$profile")

    # 3. Charger dynamiquement UNIQUEMENT les modules nécessaires
    if [ -n "$modules_to_load" ]; then
        IFS=',' read -ra modules_array <<< "$modules_to_load"
        for module in "${modules_array[@]}"; do
            if [ -f "${AKLO_PROJECT_ROOT}/aklo/modules/${module}" ]; then
                source "${AKLO_PROJECT_ROOT}/aklo/modules/${module}"
            else
                echo "Erreur critique : Dépendance de module introuvable : $module" >&2
                exit 1
            fi
        done
    fi
    
    # 4. Exécuter la commande
    local command_function="cmd_$command_name"
    if declare -f "$command_function" >/dev/null; then
        shift 
        "$command_function" "$@"
    else
        echo "Erreur: Commande '$command_name' inconnue." >&2
        exit 1
    fi
}

main "$@"