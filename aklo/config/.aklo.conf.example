# ===============================================================================
# CONFIGURATION AKLO - DOCUMENTATION COMPL√àTE
# ===============================================================================
# 
# Ce fichier sert de template ET de documentation pour tous les param√®tres Aklo.
# Copiez ce fichier √† la racine de votre projet et adaptez selon vos besoins :
# 
# cp aklo/config/.aklo.conf.example .aklo.conf
# (puis modifiez les valeurs selon votre projet)
#
# ‚ö†Ô∏è  IMPORTANT: Les chemins relatifs sont calcul√©s depuis la racine du projet
# ‚ö†Ô∏è  CONVENTIONS: Voir aklo/config/CONVENTIONS.md pour les r√®gles de nommage
# ===============================================================================

#===============================================================================
# ü§ñ ASSISTANCE IA ET COMPORTEMENT
#===============================================================================

# Niveau d'assistance par d√©faut pour toutes les commandes
# - full     : G√©n√©ration automatique compl√®te par l'IA (recommand√©)
# - skeleton : Structure g√©n√©r√©e, contenu √† compl√©ter manuellement
# - minimal  : Fichiers cr√©√©s avec IDs uniquement, pas de contenu
AGENT_ASSISTANCE=full

# Mise √† jour automatique du journal quotidien
# - true  : Chaque commande ajoute une entr√©e au journal (recommand√©)
# - false : Pas de mise √† jour automatique du journal
AUTO_JOURNAL=true

#===============================================================================
# üåø CONFIGURATION GIT ET VERSIONING
#===============================================================================

# Branche principale du projet (g√©n√©ralement 'main' ou 'master')
MAIN_BRANCH=main

# Branche de production (peut √™tre diff√©rente de la branche principale)
PRODUCTION_BRANCH=main

# Utilisation de branches de release d√©di√©es
# - true  : Cr√©ation de branches release/vX.X.X pour les releases
# - false : Releases directement depuis la branche principale
USE_RELEASE_BRANCHES=false

# Format des branches de release (utilis√© si USE_RELEASE_BRANCHES=true)
# %s sera remplac√© par le num√©ro de version (ex: release/1.2.3)
RELEASE_BRANCH_FORMAT="release/%s"

# Format des tags Git pour les versions
# %s sera remplac√© par le num√©ro de version (ex: v1.2.3)
GIT_TAG_FORMAT="v%s"

#===============================================================================
# üìÅ STRUCTURE D'ARTEFACTS - R√âPERTOIRES DE TRAVAIL
#===============================================================================

# R√©pertoire racine du projet (chemin absolu recommand√©)
PROJECT_WORKDIR="/path/to/your/project"

# üìã Product Backlog Items - Fonctionnalit√©s et user stories
PBI_DIR="docs/backlog/00-pbi"

# üìù Tasks - T√¢ches techniques d√©compos√©es depuis les PBI
TASKS_DIR="docs/backlog/01-tasks"

# üèóÔ∏è Architecture - Documents de conception technique
ARCH_DIR="docs/backlog/02-architecture"

# üêõ Debug - Rapports de bugs et corrections
DEBUG_DIR="docs/backlog/03-debug"

# üëÄ Reviews - Revues de code et analyses
REVIEWS_DIR="docs/backlog/03-reviews"

# ‚ôªÔ∏è Refactoring - Am√©liorations de code sans changement fonctionnel
REFACTOR_DIR="docs/backlog/05-refactor"

# ‚ö° Optimisation - Am√©liorations de performance
OPTIM_DIR="docs/backlog/06-optim"

# üöÄ Releases - Gestion des versions et d√©ploiements
RELEASES_DIR="docs/backlog/07-releases"

# üö® Hotfixes - Corrections d'urgence en production
HOTFIX_DIR="docs/backlog/08-hotfixes"

# üß™ Exp√©rimentations - Tests A/B et hypoth√®ses
EXPERIMENTS_DIR="docs/backlog/09-experiments"

# üìä Analyse concurrentielle - √âtudes de march√© et benchmarks
COMPETITION_DIR="docs/backlog/10-competition"

# üîê S√©curit√© - Audits et corrections de s√©curit√©
SECURITY_DIR="docs/backlog/11-security"

# ‚ö†Ô∏è D√©pr√©ciations - Suppression progressive de fonctionnalit√©s
DEPRECATION_DIR="docs/backlog/12-deprecations"

# üìà Tracking - Plans de suivi et analytics
TRACKING_DIR="docs/backlog/13-tracking"

# üìñ Documentation utilisateur - Guides et tutoriels
USER_DOCS_DIR="docs/backlog/14-user-docs"

# üìì Journal - Entr√©es quotidiennes de travail
JOURNAL_DIR="docs/backlog/15-journal"

# üìù Scratchpads - Brouillons et r√©flexions temporaires
SCRATCHPAD_DIR="docs/backlog/16-scratchpads"

# ‚ö° Fast-track - Proc√©dures acc√©l√©r√©es pour petits changements
FAST_DIR="docs/backlog/17-fast-track"

# üîÑ Meta-improvements - Am√©liorations de la charte et processus
META_DIR="docs/backlog/18-improvements"

#===============================================================================
# üìö FICHIERS SP√âCIAUX ET DOCUMENTATION PROJET
#===============================================================================

# Base de connaissances centralis√©e (fichier unique)
# Contient les apprentissages et solutions r√©utilisables
KB_FILE="docs/KNOWLEDGE-BASE.md"

# R√©pertoire pour la documentation d'onboarding
# Contient les guides d'accueil pour nouveaux d√©veloppeurs
ONBOARDING_DIR="docs/project"

#===============================================================================
# ‚úÖ VALIDATION ET QUALIT√â
#===============================================================================

# Activation de la validation par linter
# - true  : Ex√©cute le linter avant certaines op√©rations
# - false : Pas de validation automatique par linter
VALIDATE_LINTER=true

# Activation de la validation par tests
# - true  : Ex√©cute les tests avant certaines op√©rations
# - false : Pas d'ex√©cution automatique des tests
VALIDATE_TESTS=true

# Activation de la validation par build
# - true  : V√©rifie que le projet se compile avant certaines op√©rations
# - false : Pas de v√©rification de build automatique
VALIDATE_BUILD=true

# Commande pour ex√©cuter le linter (adaptez selon votre stack)
# Exemples: "npm run lint", "flake8 .", "golangci-lint run"
LINTER_COMMAND="npm run lint"

# Commande pour ex√©cuter les tests (adaptez selon votre stack)
# Exemples: "npm test", "pytest", "go test ./..."
TEST_COMMAND="npm test"

# Commande pour builder le projet (adaptez selon votre stack)
# Exemples: "npm run build", "make build", "go build"
BUILD_COMMAND="npm run build"

#===============================================================================
# üöÄ PERFORMANCE ET CACHE (TASK-6-3, TASK-6-4, TASK-13-3)
#===============================================================================

# Configuration cache intelligent
CACHE_ENABLED=true
CACHE_DEBUG=false

# Configuration cache avanc√©e
[cache]
enabled=true
cache_dir="/tmp/aklo_cache"
max_size_mb=100
ttl_days=7
cleanup_on_start=true

# Configuration des profils de performance (TASK-13-3)
[performance_profiles]
default_profile="NORMAL"
auto_detection=true
override_enabled=true

# Profil MINIMAL: Commandes de configuration rapides
[profile.minimal]
modules="core/basic_functions"
target_time="0.050"
description="Commandes de configuration rapides"

# Profil NORMAL: Commandes de d√©veloppement standard
[profile.normal]
modules="core/basic_functions cache/regex_cache cache/id_cache"
target_time="0.200"
description="Commandes de d√©veloppement standard"

# Profil FULL: Commandes d'optimisation et monitoring
[profile.full]
modules="all_modules"
target_time="1.000"
description="Commandes d'optimisation et monitoring"

#===============================================================================
# üîå SERVEURS MCP ET INT√âGRATIONS
#===============================================================================

# Activation des serveurs MCP (Model Context Protocol)
# - true  : Utilise les serveurs MCP pour l'assistance IA avanc√©e
# - false : Fonctionnement en mode autonome sans serveurs MCP
USE_MCP_SERVERS=true

# Serveur MCP pour les commandes terminal et syst√®me
# Permet l'ex√©cution s√©curis√©e de commandes et la gestion de fichiers
MCP_TERMINAL_SERVER="@aklo/mcp-terminal"

# Serveur MCP pour la documentation et les protocoles
# Permet l'acc√®s aux protocoles Aklo et la g√©n√©ration de contenu
MCP_DOCUMENTATION_SERVER="@aklo/mcp-documentation"

# Timeout pour les op√©rations MCP (en millisecondes)
# Augmentez si vos op√©rations sont lentes ou complexes
MCP_TIMEOUT=30000

#===============================================================================
# üõ°Ô∏è S√âCURIT√â ET VALIDATION HUMAINE
#===============================================================================

# Exigence de validation humaine pour les op√©rations critiques
# - true  : Demande confirmation avant les op√©rations sensibles (recommand√©)
# - false : Ex√©cution automatique sans confirmation
REQUIRE_HUMAN_VALIDATION=true

# Sauvegarde automatique avant modifications importantes
# - true  : Cr√©e des backups avant les op√©rations destructives (recommand√©)
# - false : Pas de sauvegarde automatique
AUTO_BACKUP=true

#===============================================================================
# üìù NOTES D'UTILISATION
#===============================================================================
#
# üéØ NIVEAUX D'ASSISTANCE D√âTAILL√âS :
#
# ‚Ä¢ FULL (recommand√© pour la productivit√©)
#   - L'IA g√©n√®re tout le contenu selon les protocoles
#   - Id√©al pour un workflow rapide et guid√©
#   - Contenu de haute qualit√© bas√© sur les meilleures pratiques
#
# ‚Ä¢ SKELETON (recommand√© pour l'apprentissage)
#   - Structure compl√®te g√©n√©r√©e avec sections vides
#   - Permet de comprendre l'organisation attendue
#   - Vous remplissez le contenu selon vos besoins
#
# ‚Ä¢ MINIMAL (pour les experts)
#   - Cr√©ation des fichiers avec nommage correct uniquement
#   - Aucun contenu g√©n√©r√©, libert√© totale
#   - N√©cessite une bonne connaissance des protocoles
#
# üîÑ WORKFLOW RECOMMAND√â :
#
# 1. Commencez avec AGENT_ASSISTANCE=full pour d√©couvrir
# 2. Passez √† skeleton quand vous ma√Ætrisez les protocoles
# 3. Utilisez minimal pour les projets avec contraintes sp√©cifiques
#
# üìÅ ORGANISATION DES R√âPERTOIRES :
#
# La structure propos√©e suit les meilleures pratiques :
# - Num√©rotation logique (00, 01, 02...) pour l'ordre de workflow
# - Noms explicites pour faciliter la navigation
# - S√©paration claire entre types d'artefacts
#
# Vous pouvez adapter cette structure selon vos besoins !
#
# üöÄ PROFILS DE PERFORMANCE (TASK-13-3) :
#
# ‚Ä¢ MINIMAL (0.050s)
#   - Commandes rapides : config, status, help
#   - Modules essentiels uniquement
#   - Id√©al pour les op√©rations fr√©quentes
#
# ‚Ä¢ NORMAL (0.200s) - Profil par d√©faut
#   - Commandes de d√©veloppement standard
#   - Cache intelligent activ√©
#   - √âquilibre performance/fonctionnalit√©s
#
# ‚Ä¢ FULL (1.000s)
#   - Toutes les fonctionnalit√©s disponibles
#   - Monitoring et optimisation complets
#   - Utilis√© pour les t√¢ches complexes
#
# üîß OVERRIDE MANUEL :
#
# Vous pouvez forcer un profil avec :
# export AKLO_PROFILE=MINIMAL
# export AKLO_PROFILE=NORMAL
# export AKLO_PROFILE=FULL
#
# üìä CONVENTIONS DE NOMMAGE :
#
# ‚Ä¢ Variables globales : UPPERCASE (ex: PROJECT_WORKDIR, CACHE_ENABLED)
# ‚Ä¢ Variables de section : lowercase (ex: enabled, cache_dir, modules)
# ‚Ä¢ Valeurs textuelles : toujours entre guillemets doubles
# ‚Ä¢ Noms de sections : lowercase avec points pour hi√©rarchie
#
# Voir aklo/config/CONVENTIONS.md pour plus de d√©tails.
#
#===============================================================================