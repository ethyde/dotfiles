#!/usr/bin/env bash
#==============================================================================
# Am√©lioration UX : Syst√®me d'aide avanc√© pour Aklo
# Support de --help et <command> --help
#==============================================================================

# Fonction d'aide g√©n√©rale am√©lior√©e
show_help() {
    cat << 'EOF'
ü§ñ The Aklo Protocol - Charte Automation Tool (v2.0)

USAGE:
    aklo <command> [arguments]
    aklo <command> --help        # Aide sp√©cifique √† une commande
    aklo --help                  # Cette aide

WORKFLOW PRINCIPAL:
    1. aklo init                 # Initialiser le projet
    2. aklo propose-pbi "titre"  # Cr√©er un PBI
    3. aklo plan <PBI_ID>        # Planifier les t√¢ches
    4. aklo start-task <TASK_ID> # Commencer une t√¢che
    5. aklo submit-task          # Soumettre pour review
    6. aklo merge-task <TASK_ID> # Merger apr√®s validation

COMMANDES PRINCIPALES:
    init                    Lie la Charte Aklo au projet actuel
    propose-pbi <title>     Cr√©e un nouveau Product Backlog Item
    plan <PBI_ID>          Planifie interactivement les t√¢ches d'un PBI
    start-task <TASK_ID>   Pr√©pare l'environnement pour travailler sur une t√¢che
    submit-task            Commit et soumet la t√¢che courante pour review
    merge-task <TASK_ID>   Merge une t√¢che valid√©e dans la branche principale
    
COMMANDES DE RELEASE:
    release <type>         D√©marre le processus de release (major|minor|patch)
    hotfix <description>   D√©marre un hotfix depuis la production
    hotfix publish         Publie un hotfix termin√©

COMMANDES UTILITAIRES:
    status                 Affiche l'√©tat complet du projet
    new <type> [args...]   Cr√©e un nouvel artefact de support
    quickstart             Mode guid√© pour d√©butants
    validate               Valide la configuration du projet

COMMANDES D'AIDE:
    help                   Affiche cette aide
    --help                 Alias pour help
    <command> --help       Aide sp√©cifique √† une commande

EXEMPLES:
    aklo init                              # Initialiser un nouveau projet
    aklo propose-pbi "Authentification"   # Cr√©er un PBI
    aklo plan 1                           # Planifier le PBI #1
    aklo start-task 1                     # Commencer la t√¢che #1
    aklo status                           # Voir l'√©tat du projet
    aklo propose-pbi --help               # Aide pour propose-pbi

CONFIGURATION:
    Le fichier .aklo.conf contient la configuration du projet.
    Les protocoles sont dans le r√©pertoire charte/.

DOCUMENTATION:
    Voir les protocoles dans charte/PROTOCOLES/ pour plus de d√©tails.
    
Pour une aide sp√©cifique : aklo <command> --help
EOF
}

# Aide sp√©cifique pour propose-pbi
show_help_propose_pbi() {
    cat << 'EOF'
üìã aklo propose-pbi - Cr√©er un Product Backlog Item

USAGE:
    aklo propose-pbi <title>
    aklo propose-pbi --interactive
    aklo propose-pbi --template <type>

DESCRIPTION:
    Cr√©e un nouveau PBI selon le protocole 01-PLANIFICATION.
    Le PBI est cr√©√© avec un ID auto-incr√©ment√© et suit le template standard.

ARGUMENTS:
    <title>                Titre du PBI (obligatoire si pas --interactive)

OPTIONS:
    --interactive, -i      Mode interactif avec questions guid√©es
    --template <type>      Utilise un template pr√©d√©fini (feature|bug|epic)
    --priority <level>     D√©finit la priorit√© (high|medium|low)
    --help, -h            Affiche cette aide

EXEMPLES:
    aklo propose-pbi "Authentification utilisateur"
    aklo propose-pbi --interactive
    aklo propose-pbi --template feature "API REST"
    aklo propose-pbi --priority high "Bug critique"

TEMPLATES DISPONIBLES:
    feature     Template pour nouvelle fonctionnalit√©
    bug         Template pour correction de bug
    epic        Template pour epic (grande fonctionnalit√©)
    research    Template pour recherche/investigation

WORKFLOW:
    1. Cr√©e le fichier PBI-<ID>-<TITLE>.xml
    2. Remplit avec le template appropri√©
    3. Ouvre l'√©diteur pour finalisation
    4. Commit automatique si configur√©

FICHIERS CR√â√âS:
    docs/backlog/00-pbi/PBI-<ID>-<TITLE>.xml

Voir aussi: aklo plan --help, aklo status
EOF
}

# Export des fonctions pour utilisation dans le script principal

# Fonction cmd_help pour la commande 'help'
cmd_help() {
    local subcommand="$1"
    
    case "$subcommand" in
        "propose-pbi"|"pbi")
            show_help_propose_pbi
            ;;
        "new")
            show_help_new
            ;;
        "plan")
            show_help_plan
            ;;
        "start-task")
            show_help_start_task
            ;;
        "submit-task")
            show_help_submit_task
            ;;
        "merge-task")
            show_help_merge_task
            ;;
        "release")
            show_help_release
            ;;
        "hotfix")
            show_help_hotfix
            ;;
        "status")
            show_help_status
            ;;
        "init")
            show_help_init
            ;;
        "")
            show_help
            ;;
        *)
            echo "Aide non disponible pour la commande: $subcommand"
            echo "Utilisez 'aklo help' pour voir toutes les commandes disponibles."
            return 1
            ;;
    esac
}

# Fonctions d'aide pour les autres commandes (√† compl√©ter selon les besoins)
show_help_new() {
    cat << 'EOF'
üÜï aklo new - Cr√©er un nouvel artefact de support

USAGE:
    aklo new <type> [arguments...]

DESCRIPTION:
    Cr√©e un nouvel artefact de support selon le type sp√©cifi√©.
    Chaque type suit un template sp√©cifique et des conventions.

TYPES DISPONIBLES:
    pbi         Product Backlog Item (alias: propose-pbi)
    task        T√¢che de d√©veloppement
    arch        Document d'architecture
    debug       Rapport de debug
    review      Demande de review
    journal     Entr√©e de journal
    kb          Article de base de connaissances
    meta        Am√©lioration du syst√®me Aklo
    experiment  Exp√©rimentation
    security    Audit de s√©curit√©
    docs        Documentation utilisateur

EXEMPLES:
    aklo new pbi "Authentification"
    aklo new task "Impl√©menter login"
    aklo new arch "Architecture API"
    aklo new debug "Probl√®me performance"
    aklo new meta "Am√©liorer syst√®me d'aide"

Voir aussi: aklo help <type> pour l'aide sp√©cifique √† chaque type
EOF
}

show_help_plan() {
    cat << 'EOF'
üìã aklo plan - Planifier les t√¢ches d'un PBI

USAGE:
    aklo plan <PBI_ID>
    aklo plan --interactive

DESCRIPTION:
    Planifie interactivement les t√¢ches n√©cessaires pour r√©aliser un PBI.
    Cr√©e les t√¢ches avec estimation et assignation.

ARGUMENTS:
    <PBI_ID>              ID du PBI √† planifier

OPTIONS:
    --interactive, -i      Mode interactif pour s√©lectionner le PBI
    --help, -h            Affiche cette aide

WORKFLOW:
    1. Lit le PBI sp√©cifi√©
    2. Analyse les crit√®res d'acceptation
    3. Propose des t√¢ches interactivement
    4. Cr√©e les fichiers TASK-*.xml
    5. Met √† jour le PBI avec les t√¢ches

EXEMPLES:
    aklo plan 1
    aklo plan --interactive

Voir aussi: aklo propose-pbi --help, aklo start-task --help
EOF
}

show_help_start_task() {
    cat << 'EOF'
‚ñ∂Ô∏è  aklo start-task - Commencer une t√¢che

USAGE:
    aklo start-task <TASK_ID>
    aklo start-task --interactive

DESCRIPTION:
    Pr√©pare l'environnement pour travailler sur une t√¢che sp√©cifique.
    Cr√©e une branche Git, charge le contexte et ouvre l'√©diteur.

ARGUMENTS:
    <TASK_ID>             ID de la t√¢che √† commencer

OPTIONS:
    --interactive, -i      Mode interactif pour s√©lectionner la t√¢che
    --help, -h            Affiche cette aide

WORKFLOW:
    1. V√©rifie que la t√¢che existe et est disponible
    2. Cr√©e une branche Git: task/<TASK_ID>
    3. Charge le contexte de la t√¢che
    4. Ouvre l'√©diteur sur les fichiers concern√©s
    5. Met √† jour le statut de la t√¢che

EXEMPLES:
    aklo start-task 1
    aklo start-task --interactive

Voir aussi: aklo plan --help, aklo submit-task --help
EOF
}

show_help_submit_task() {
    cat << 'EOF'
üì§ aklo submit-task - Soumettre une t√¢che pour review

USAGE:
    aklo submit-task [options]

DESCRIPTION:
    Commit les changements de la t√¢che courante et la soumet pour review.
    Cr√©e une pull request si configur√©.

OPTIONS:
    --message <msg>        Message de commit personnalis√©
    --no-commit           Ne pas faire le commit automatiquement
    --help, -h            Affiche cette aide

WORKFLOW:
    1. V√©rifie qu'une t√¢che est en cours
    2. Ajoute tous les fichiers modifi√©s
    3. Cr√©e un commit avec le message de la t√¢che
    4. Push la branche
    5. Met √† jour le statut de la t√¢che
    6. Cr√©e une PR si configur√©

EXEMPLES:
    aklo submit-task
    aklo submit-task --message "Fix typo in README"

Voir aussi: aklo start-task --help, aklo merge-task --help
EOF
}

show_help_merge_task() {
    cat << 'EOF'
üîÄ aklo merge-task - Merger une t√¢che valid√©e

USAGE:
    aklo merge-task <TASK_ID>
    aklo merge-task --interactive

DESCRIPTION:
    Merge une t√¢che valid√©e dans la branche principale.
    Nettoie les branches temporaires.

ARGUMENTS:
    <TASK_ID>             ID de la t√¢che √† merger

OPTIONS:
    --interactive, -i      Mode interactif pour s√©lectionner la t√¢che
    --help, -h            Affiche cette aide

WORKFLOW:
    1. V√©rifie que la t√¢che est valid√©e
    2. Merge la branche task/<TASK_ID> dans main
    3. Supprime la branche temporaire
    4. Met √† jour le statut de la t√¢che
    5. Met √† jour le PBI parent

EXEMPLES:
    aklo merge-task 1
    aklo merge-task --interactive

Voir aussi: aklo submit-task --help, aklo status --help
EOF
}

show_help_release() {
    cat << 'EOF'
üöÄ aklo release - G√©rer les releases

USAGE:
    aklo release <type>
    aklo release --interactive

DESCRIPTION:
    D√©marre le processus de release selon le type sp√©cifi√©.
    Met √† jour les versions et cr√©e les tags Git.

ARGUMENTS:
    <type>                Type de release (major|minor|patch)

OPTIONS:
    --interactive, -i      Mode interactif pour choisir le type
    --help, -h            Affiche cette aide

TYPES DE RELEASE:
    major                  Version majeure (breaking changes)
    minor                  Version mineure (nouvelles fonctionnalit√©s)
    patch                  Version patch (corrections)

WORKFLOW:
    1. V√©rifie l'√©tat du projet
    2. Met √† jour la version dans package.json
    3. Cr√©e un commit de release
    4. Cr√©e un tag Git
    5. Push les changements

EXEMPLES:
    aklo release patch
    aklo release --interactive

Voir aussi: aklo hotfix --help, aklo status --help
EOF
}

show_help_hotfix() {
    cat << 'EOF'
üî• aklo hotfix - G√©rer les hotfixes

USAGE:
    aklo hotfix <description>
    aklo hotfix publish

DESCRIPTION:
    G√®re les hotfixes pour corriger des probl√®mes critiques en production.

COMMANDES:
    hotfix <description>   D√©marre un nouveau hotfix
    hotfix publish         Publie un hotfix termin√©

ARGUMENTS:
    <description>          Description du probl√®me √† corriger

WORKFLOW:
    1. Cr√©e une branche hotfix depuis main
    2. Permet de corriger le probl√®me
    3. hotfix publish: merge dans main et production

EXEMPLES:
    aklo hotfix "Fix critical login bug"
    aklo hotfix publish

Voir aussi: aklo release --help
EOF
}

show_help_status() {
    cat << 'EOF'
üìä aklo status - √âtat du projet

USAGE:
    aklo status [options]

DESCRIPTION:
    Affiche l'√©tat complet du projet Aklo.

OPTIONS:
    --verbose, -v         Affichage d√©taill√©
    --help, -h            Affiche cette aide

INFORMATIONS AFFICH√âES:
    - Configuration du projet
    - PBI en cours et termin√©s
    - T√¢ches en cours et termin√©es
    - Branches Git actives
    - √âtat des releases

EXEMPLES:
    aklo status
    aklo status --verbose

Voir aussi: aklo init --help
EOF
}

show_help_init() {
    cat << 'EOF'
üöÄ aklo init - Initialiser un projet Aklo

USAGE:
    aklo init [options]

DESCRIPTION:
    Initialise un projet avec la Charte Aklo.
    Cr√©e la configuration et lie les protocoles.

OPTIONS:
    --force               Force l'initialisation m√™me si d√©j√† configur√©
    --help, -h            Affiche cette aide

WORKFLOW:
    1. V√©rifie l'environnement
    2. Cr√©e le fichier .aklo.conf
    3. Lie la Charte IA au projet
    4. Initialise la structure de dossiers
    5. Configure Git hooks si n√©cessaire

EXEMPLES:
    aklo init
    aklo init --force

Voir aussi: aklo status --help
EOF
}