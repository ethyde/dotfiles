#!/usr/bin/env bash
#==============================================================================
# AKLO SYSTEM COMMANDS MODULE - FINAL
# Commandes : status, init
#==============================================================================

#------------------------------------------------------------------------------
# COMMANDE: status
# Affiche un tableau de bord complet de l'√©tat du projet.
#------------------------------------------------------------------------------
cmd_status() {
    echo "ü§ñ Aklo Project Status Dashboard"
    echo "========================================"
    
    local config_file="${AKLO_PROJECT_ROOT}/.aklo.conf"
    local has_config=false
    local has_artefacts=false
    
    # V√©rifier la configuration
    if [ -f "$config_file" ]; then
        echo "‚úÖ Projet configur√© via .aklo.conf."
        has_config=true
    else
        echo "‚ö†Ô∏è  Aucune configuration Aklo locale trouv√©e. Pensez √† lancer 'aklo init'."
    fi
    
    # V√©rifier les artefacts avec d√©tection robuste
    local pbi_count=0
    local task_count=0
    
    # Compter les PBI
    if [ -d "${AKLO_PROJECT_ROOT}/docs/backlog/00-pbi" ]; then
        pbi_count=$(find "${AKLO_PROJECT_ROOT}/docs/backlog/00-pbi" -name "PBI-*.xml" 2>/dev/null | wc -l | tr -d ' ')
    fi
    
    # Compter les t√¢ches
    if [ -d "${AKLO_PROJECT_ROOT}/docs/backlog/01-tasks" ]; then
        task_count=$(find "${AKLO_PROJECT_ROOT}/docs/backlog/01-tasks" -name "TASK-*.xml" 2>/dev/null | wc -l | tr -d ' ')
    fi
    
    # D√©tecter si le projet a des artefacts
    if [ "$pbi_count" -gt 0 ] || [ "$task_count" -gt 0 ]; then
        has_artefacts=true
    fi
    
    echo "üìä Artefacts :"
    echo "   - PBI: ${pbi_count}"
    echo "   - T√¢ches: ${task_count}"
    
    # Statut du projet
    if [ "$has_config" = true ] && [ "$has_artefacts" = true ]; then
        echo "üéØ Statut: Projet Aklo actif avec artefacts"
    elif [ "$has_config" = true ]; then
        echo "üéØ Statut: Projet Aklo initialis√© (aucun artefact)"
    elif [ "$has_artefacts" = true ]; then
        echo "üéØ Statut: Projet avec artefacts (non initialis√©)"
    else
        echo "üéØ Statut: Projet non initialis√©"
    fi

    if git -C "${AKLO_PROJECT_ROOT}" rev-parse --is-inside-work-tree >/dev/null 2>&1; then
        local branch
        branch=$(git -C "${AKLO_PROJECT_ROOT}" branch --show-current)
        echo "üåø Git Branch: ${branch}"
    fi
}

#------------------------------------------------------------------------------
# COMMANDE: init
#------------------------------------------------------------------------------
cmd_init() {
    echo "üîß Initialisation du projet Aklo..."
    mkdir -p "${AKLO_PROJECT_ROOT}/docs/backlog/00-pbi"
    mkdir -p "${AKLO_PROJECT_ROOT}/docs/backlog/01-tasks"
    echo "‚úÖ Structure de r√©pertoires cr√©√©e dans 'docs/backlog/'."

    local config_file="${AKLO_PROJECT_ROOT}/.aklo.conf"
    if [ ! -f "$config_file" ]; then
        cp "${AKLO_TOOL_DIR}/config/.aklo.conf" "$config_file"
        echo "‚úÖ Fichier de configuration '.aklo.conf' cr√©√© √† partir du d√©faut."
    else
        echo "‚ÑπÔ∏è  Le fichier '.aklo.conf' existe d√©j√†."
    fi
    echo "üéâ Projet initialis√© avec succ√®s !"
} 