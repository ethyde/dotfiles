<?xml version="1.0" encoding="UTF-8"?>
<protocol name="security_audit">
  <description>
    This protocol is activated periodically (e.g., quarterly) or before a major release to identify and plan the remediation of security vulnerabilities in the code and dependencies.
  </description>

  <section title="Mission and Deliverables">
    <sub_section title="Mission">
      <introduction>
        To conduct a systematic security analysis to identify potential vulnerabilities, assess their criticality, and create an action plan to remediate them.
      </introduction>
    </sub_section>
    <sub_section title="Expected Deliverables">
      <deliverables>
        <deliverable type="report">An `AUDIT-SECURITY-[DATE].xml` file created in `/docs/backlog/11-security/`.</deliverable>
        <deliverable type="remediation_tasks">One or more `Tasks` or `PBIs` created to fix the identified vulnerabilities.</deliverable>
      </deliverables>
    </sub_section>
  </section>

  <section title="Audit Artefact Management and Structure">
    <sub_section title="Naming Convention">
      <format>AUDIT-SECURITY-[DATE]-[Status].xml</format>
      <details>
        <detail name="date">The date of the audit in `YYYY-MM-DD` format.</detail>
        <detail name="status">The status of the audit.</detail>
      </details>
    </sub_section>
    <sub_section title="Statuses">
      <list>
        <item name="scanning">Automated and manual analysis is in progress.</item>
        <item name="triage">Found vulnerabilities are being analyzed and prioritized.</item>
        <item name="concluded">The audit is complete, and the action plan has been created.</item>
      </list>
    </sub_section>
    <sub_section title="Mandatory Artefact Structure">
      <artefact_template format="xml">
        <security_audit_report date="[YYYY-MM-DD]" status="scanning">
          <metadata>
            <responsible>[Human_Developer's Name]</responsible>
            <audit_scope>[e.g., "NPM Dependencies", "Authentication API"]</audit_scope>
            <tools_used>
              <tool name="[e.g., npm audit, Snyk CLI, SonarQube]" />
            </tools_used>
          </metadata>
          <content>
            <executive_summary>
              <overall_risk_level>Critical / High / Medium / Low</overall_risk_level>
              <critical_vulnerabilities_found>0</critical_vulnerabilities_found>
              <high_vulnerabilities_found>0</high_vulnerabilities_found>
            </executive_summary>
            <identified_vulnerabilities>
              <vulnerability id="1">
                <description>e.g., XSS in the search field</description>
                <severity>Critical</severity>
                <affected_component>search.js</affected_component>
                <recommendation>Escape user inputs</recommendation>
              </vulnerability>
            </identified_vulnerabilities>
            <action_plan>
              <remediation_task type="Urgent" ref="[TASK-ID]">Fix for vulnerability #[ID]</remediation_task>
              <remediation_task type="Standard" ref="[PBI-ID]">Fix for vulnerability #[ID]</remediation_task>
              <see_also protocol="00-PRODUCT-OWNER" description="For standard-priority fixes requiring functional changes."/>
              <see_also protocol="01-PLANNING" description="For urgent technical fixes."/>
              <see_also protocol="13-SECURITE-AUDIT" description="This action plan is part of the security audit process itself."/>
              <note>The proposed action plan must be explicitly approved by the Human_Developer before any remediation tasks are created.</note>
            </action_plan>
          </content>
        </security_audit_report>
      </artefact_template>
    </sub_section>
  </section>

  <section title="Audit Procedure">
    <step number="1" type="procedure" title="Automated Scan">
      <action>Create an `AUDIT-SECURITY-[DATE]-SCANNING.xml` file. Run automated security analysis tools (e.g., `npm audit`, `Snyk`). Compile the raw results in the report.</action>
      <automation optional="true">`aklo security`</automation>
    </step>
    <step number="2" type="analysis" title="Triage and Manual Analysis">
      <action>Change the status to `TRIAGE`. For each found vulnerability, assess its real-world impact in the application's context (eliminating false positives) and assign a severity level (Critical, High, Medium, Low). Fill in the "Identified Vulnerabilities" list.</action>
    </step>
    <step number="3" type="analysis" title="Correction Plan">
      <action>For each validated vulnerability, propose a remediation recommendation. Draft an "Action Plan" that lists the `Tasks` and `PBIs` to be created.</action>
    </step>
    <step number="4" type="validation" title="Plan Validation">
      <awaiting_validation>Submit the complete audit report and action plan to the Human_Developer for validation.</awaiting_validation>
    </step>
    <step number="5" type="conclusion" title="Closure">
      <action>Once the plan is validated, activate the [PRODUCT OWNER] or [PLANIFICATION] protocols to officially create the remediation PBIs and Tasks. Link the created artifacts in the action plan of the audit report. Change the report's status to `CONCLUDED`.</action>
    </step>
  </section>
  
  <section title="Example Journal Entries">
      <example_journal_entry>
        <entry timestamp="2025-07-07T09:00:00Z">
          <source protocol="security_audit" />
          <message type="info">Starting quarterly security audit for 2025-Q3. Status: SCANNING.</message>
        </entry>
        <entry timestamp="2025-07-07T11:00:00Z">
          <source protocol="security_audit" />
          <message type="validation_request">Security audit `AUDIT-SECURITY-2025-07-07` is complete and submitted for validation. One high-severity vulnerability found.</message>
        </entry>
        <entry timestamp="2025-07-07T11:45:00Z">
          <source protocol="security_audit" />
          <message type="info">Action plan for audit `AUDIT-SECURITY-2025-07-07` approved. One remediation task will be created. Status: CONCLUDED.</message>
        </entry>
      </example_journal_entry>
    </section>
</protocol>