<?xml version="1.0" encoding="UTF-8"?>
<protocol name="architecture_design">
    <description>
        This protocol is activated on the recommendation of the [PLANNING] protocol for one or more
        Tasks identified as having high risk or complexity.
    </description>

    <section title="Mission and Deliverables">
        <sub_section title="Mission">
            <introduction>
                To analyze a complex technical problem, evaluate several solutions, and formalize a
                clear and justified architectural decision that will guide the implementation.
            </introduction>
        </sub_section>
        <sub_section title="Expected Deliverables">
            <deliverables>
                <deliverable type="document">
                    An `ARCH-[PBI_ID]-[ID]-VALIDATED.xml` file detailing the chosen solution, the
                    trade-offs analyzed, and justifications based on guiding principles (SoC, DDD,
                    Twelve-Factor App, etc.), created in `/docs/backlog/02-architecture/`.
                </deliverable>
                <deliverable type="task_plan">
                    The update, deletion, or creation of Tasks in `/docs/backlog/01-tasks/` to
                    reflect the validated architecture. The new plan must be immediately actionable.
                </deliverable>
            </deliverables>
        </sub_section>
    </section>

    <section title="Architecture Artefact Management and Structure">
        <sub_section title="Naming Convention">
            <format>ARCH-[PBI_ID]-[ID]-[status].xml</format>
            <details>
                <detail name="pbi_id">ID of the parent PBI, linking the decision to the business
                    need.</detail>
                <detail name="id">Sequential identifier for the architecture document for this PBI.</detail>
                <detail name="status">Status of the architecture document.</detail>
            </details>
        </sub_section>
        <sub_section title="Statuses">
            <list>
                <item name="draft">The document is being drafted; analyses are in progress.</item>
                <item name="awaiting_review">The architecture proposal is complete and ready for
                    review by the Human_Developer.</item>
                <item name="validated">The architecture has been approved. It becomes the reference
                    for revising Tasks.</item>
                <item name="deprecated">The architecture has been replaced by a new version or is no
                    longer relevant.</item>
            </list>
        </sub_section>
        <sub_section title="Mandatory Artefact Structure">
            <artefact_template format="xml">
                <architecture_document pbi_id="[pbi_id]" id="[id]" status="draft"
                    title="[Title describing the architectural problem]">
                    <metadata>
                        <parent_pbi>PBI-[pbi_id]</parent_pbi>
                        <assignee>Human_Developer</assignee>
                        <git_branch>feature/arch-[pbi_id]-[id]</git_branch>
                    </metadata>
                    <content>
                        <problem_statement>
                            A clear description of the technical challenge that required activating
                            this protocol, based on the Tasks flagged by the planner.
                        </problem_statement>
                        <options_analysis>
                            <option name="A" title="[Name of Approach A]">
                                <description>...</description>
                                <pros>...</pros>
                                <cons>...</cons>
                            </option>
                            <option name="B" title="[Name of Approach B]">
                                <description>...</description>
                                <pros>...</pros>
                                <cons>...</cons>
                            </option>
                        </options_analysis>
                        <decision_and_rationale>
                            Announcement of the chosen option and a detailed explanation of the
                            reasons for this choice, based on the trade-off analysis and project
                            guiding principles (performance, cost, maintainability, etc.).
                        </decision_and_rationale>
                        <solution_diagram optional="true">
                            A diagram (e.g., Mermaid, ASCII art) to illustrate the chosen solution
                            can be included here.
                        </solution_diagram>
                        <impact_on_tasks>
                            A detailed description of the Tasks to be created, modified, or deleted
                            to implement this architecture.
                        </impact_on_tasks>
                    </content>
                </architecture_document>
            </artefact_template>
            <example>
                <architecture_document pbi_id="42" id="1" status="validated"
                    title="Asynchronous Notification Service Design">
                    <metadata>
                        <parent_pbi>PBI-42</parent_pbi>
                        <assignee>alice</assignee>
                        <git_branch>feature/arch-42-1-notification-service</git_branch>
                    </metadata>
                    <content>
                        <problem_statement>
                            Implement an asynchronous notification service for users to ensure
                            decoupling and scalability of the main application.
                        </problem_statement>
                        <options_analysis>
                            <option name="A" title="Message Broker (RabbitMQ)">
                                <description>Use a dedicated message broker to handle notification
                                    queues.</description>
                                <pros>High scalability, reliability, persistent messages.</pros>
                                <cons>Adds infrastructure complexity and a new component to
                                    maintain.</cons>
                            </option>
                            <option name="B" title="Native WebSocket Push">
                                <description>Push notifications directly from the application server
                                    via a WebSocket connection.</description>
                                <pros>Simplicity, real-time feel, no extra infrastructure.</pros>
                                <cons>Less robust under high load, no built-in retry mechanism.</cons>
                            </option>
                        </options_analysis>
                        <decision_and_rationale>
                            Option A is chosen for its long-term robustness and scalability, which
                            aligns with our growth projections. The initial setup complexity is an
                            acceptable trade-off.
                        </decision_and_rationale>
                        <solution_diagram optional="true"><![CDATA[
<diagram type="mermaid">
graph TD;
  WebApp --> API_Endpoint;
  API_Endpoint -- Publishes message --> RabbitMQ;
  RabbitMQ -- Pushes to queue --> NotificationWorker;
  NotificationWorker -- Sends notification --> UserDevice;
</diagram>
            ]]></solution_diagram>
                        <impact_on_tasks>
                            - Create TASK-42-5: Setup and deploy RabbitMQ infrastructure.
                            - Modify TASK-42-4: Adapt the API to publish events instead of sending
                            notifications directly.
                            - Create TASK-42-6: Implement the NotificationWorker service to consume
                            messages.
                        </impact_on_tasks>
                    </content>
                </architecture_document>
            </example>
        </sub_section>
    </section>

    <section title="Architecture Procedure">
        <flight_plan required="true" name="ARCHITECTURE_FLIGHT_PLAN">
            <title>Architecture Flight Plan</title>
            <instruction>Before analyzing the architectural problem, the agent must present a
                detailed plan.</instruction>
            <objective>Analyze and design an architectural solution for complex Tasks</objective>
            <planned_actions>
                <item>Analyze Tasks flagged as requiring architectural review</item>
                <item>Identify the core technical problem to be solved</item>
                <item>Generate the ID for the architecture document</item>
                <item>Create the `ARCH-[PBI_ID]-[ID]-DRAFT.xml` file in
                    `/docs/backlog/02-architecture/`</item>
                <item>Research and analyze 2-3 viable architectural options</item>
                <item>Evaluate the trade-offs for each option</item>
                <item>Update the affected Tasks after architecture validation</item>
            </planned_actions>
            <affected_files>
                <item type="creation">/docs/backlog/02-architecture/ARCH-[PBI_ID]-[ID]-DRAFT.xml</item>
                <item type="update">/docs/backlog/01-tasks/TASK-[PBI_ID]-[Task_ID]-TODO.xml</item>
                <item type="conditional_creation">New Task files depending on the chosen
                    architecture</item>
            </affected_files>
            <system_commands>
                <item type="verification">Check for existing architecture documents for this PBI</item>
                <item type="read">Read flagged Tasks to understand the complexity</item>
            </system_commands>
            <mcp_tools>
                <item>mcp_desktop-commander_list_directory</item>
                <item>mcp_desktop-commander_read_file</item>
                <item>mcp_desktop-commander_write_file</item>
                <item>mcp_desktop-commander_edit_block</item>
            </mcp_tools>
            <required_validation>
                <answer>yes</answer>
                <description>Explicit approval required before analysis</description>
            </required_validation>
        </flight_plan>
        <step number="1" type="analysis" title="Problem Framing">
            <description>
                Take the list of flagged Tasks as input. Write the "Problem Statement" section of
                the architecture document, which will be created with `DRAFT` status.
            </description>
        </step>
        <step number="2" type="analysis" title="Options Evaluation">
            <description>
                Propose 2 to 3 viable architectural approaches to solve the problem. For each
                option, fill out the trade-off analysis in the document. Submit this analysis to the
                Human_Developer to choose a direction and get clarifications (ask 4-6 clarifying
                questions to refine constraints).
            </description>
            <awaiting_validation>Submit this analysis to the Human_Developer for validation and
                clarification.</awaiting_validation>
        </step>
        <step number="3" type="procedure" title="Decision and Formalization">
            <description>
                Based on the direction chosen by the Human_Developer, write the detailed design of
                the chosen solution in the architecture document. Write the "Decision and Rationale"
                and "Impact on Tasks" sections. Change the document status to `AWAITING_REVIEW` and
                submit it for final validation.
            </description>
            <awaiting_validation>Submit the complete design document for final approval.</awaiting_validation>
        </step>
        <step number="4" type="conclusion" title="Action Plan Update">
            <description>
                Present the Revised Task Plan to the Human_Developer for validation. Once the
                document is `VALIDATED`, execute the plan described in the "Impact on Tasks"
                section. Activate the [KNOWLEDGE-BASE] protocol to determine if the analysis has
                produced knowledge worth centralizing. Modify, delete, and create the TASK files in
                `/docs/backlog/01-tasks/`.
            </description>
        </step>
    </section>

    <section title="Atomic Commit and Validation">
        <sub_section title="Commit Content">
            <commit_message_template><![CDATA[
feat(arch): Design PBI-[ID] - [Architecture title]

- Validated ARCH-[PBI_ID]-[ID] document
- [N] tasks modified according to architectural impact
- [X] new tasks created
- [Y] tasks deleted (became obsolete)
- Journal updated with architectural decisions

Chosen architecture: [Summary of the solution]

Impacted tasks:
- TASK-[PBI_ID]-01: [Modification made]
- TASK-[PBI_ID]-02: [Modification made]
- [...]

New tasks:
- TASK-[PBI_ID]-05: [New task]
- [...]

Next step: DEVELOPMENT
        ]]></commit_message_template>
        </sub_section>
        <sub_section title="Pre-Commit Validation">
            <awaiting_validation> Before the commit, present the complete diff to the
                Human_Developer: <list type="ordered">
                    <item>Diff of the final architecture document</item>
                    <item>All TASK modifications</item>
                    <item>New TASKs created</item>
                    <item>Deleted TASKs (with justification)</item>
                    <item>Journal update</item>
                </list>
        <instruction>The
                Human_Developer must explicitly approve the atomic commit.</instruction>
            </awaiting_validation>
        </sub_section>
        <sub_section title="Architectural Revision Management">
            <rule>
                Any architectural revision after validation constitutes a new full cycle of the
                ARCHITECTURE protocol with its own atomic commit.
            </rule>
            <example>
                <commit_message><![CDATA[
fix(arch): Revise architecture for PBI-[ID] - [Reason for revision]

- Updated ARCH-[PBI_ID]-[ID] document (version 2)
- [N] tasks re-modified according to the new architecture
- Journal updated with the revision justification
        ]]></commit_message>
            </example>
        </sub_section>
    </section>
</protocol>