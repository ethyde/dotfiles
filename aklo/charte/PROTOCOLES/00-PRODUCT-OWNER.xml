# PROTOCOLE SP√âCIFIQUE : GESTION PRODUIT (PRODUCT OWNER)

Ce protocole s'active pour transformer une id√©e ou un besoin m√©tier en un "Product Backlog Item" (PBI) formel, pr√™t pour le d√©veloppement. C'est le point d'entr√©e de tout le flux de travail.

## SECTION 1 : MISSION ET LIVRABLE

### 1.1. Mission

La mission de ce mode est de d√©finir, clarifier et formaliser une exigence pour s'assurer qu'elle est :

- **Compr√©hensible :** L'√©quipe technique doit comprendre sans ambigu√Øt√© ce qui est demand√©.
- **Valorisable :** L'exigence doit apporter une valeur ajout√©e claire pour l'utilisateur final.
- **R√©alisable :** La demande doit √™tre suffisamment d√©finie pour √™tre √©valu√©e et d√©compos√©e.
- **Note :** Une exigence peut provenir d'une demande directe du `Human_Developer` ou √™tre le r√©sultat d'autres protocoles comme [ANALYSE-CONCURRENCE], [EXPERIMENTATION] ou [SECURITE-AUDIT].

### 1.2. Livrable Attendu

- Un nouveau fichier `PBI-[ID]-PROPOSED.xml` dans le r√©pertoire `/docs/backlog/00-pbi/`, respectant la structure d√©finie et les crit√®res de qualit√© **INVEST**.

## SECTION 2 : ARTEFACT PBI - GESTION ET STRUCTURE

### 2.1. Nommage

- `PBI-[ID]-[Status].xml`
  - `[ID]` : Identifiant num√©rique unique (ex: 42).
  - `[Status]` : Le statut du PBI dans son cycle de vie.

### 2.2. Statuts

- `PROPOSED` : Propos√©, en attente de validation pour la planification.
- `AGREED` : Sp√©cifications valid√©es, pr√™t pour d√©composition en t√¢ches.
- `IN_PROGRESS` : Au moins une `Task` associ√©e est en cours de d√©veloppement.
- `DONE` : Toutes les `Tasks` associ√©es sont termin√©es.
- `ACCEPTED` : La fonctionnalit√© a √©t√© valid√©e par le `Human_Developer`.

### 2.3. Structure Obligatoire Du Fichier PBI

```markdown
# PBI-%%ID%% : %%TITLE%%

---
**Statut:** %%STATUS%%
**Date de cr√©ation:** %%DATE%%
---

## 1. Description de la User Story

_En tant que [type d'utilisateur], je veux [r√©aliser une action], afin de [obtenir un b√©n√©fice]._

## 2. Crit√®res d'Acceptation

- [ ] Crit√®re 1 : Condition binaire et testable.
- [ ] Crit√®re 2 : Autre condition binaire et testable.
- [ ] ...

## 3. Sp√©cifications Techniques Pr√©liminaires & Contraintes (Optionnel)

_Section pour l'architecte/lead dev. D√©crit les impacts, les d√©pendances, les choix techniques √† haut niveau qui pourraient influencer la planification._

## 4. Documents d'Architecture Associ√©s (Optionnel)

_Lien vers un ou plusieurs documents du r√©pertoire `/docs/backlog/02-architecture/` si une phase de conception a √©t√© n√©cessaire._

- [ARCH-%%ID%%-1.xml](../../02-architecture/ARCH-%%ID%%-1.xml)

## 5. Tasks Associ√©es

_Cette section sera remplie par le protocole [PLANIFICATION]._

- [ ] TASK-%%ID%%-1
- [ ] TASK-%%ID%%-2
- [ ] ...
```

## SECTION 3 : PROC√âDURE DE D√âFINITION D'UN PBI

1. **[ANALYSE] Phase 1 : Capture du Besoin Initial**
   - Prendre en entr√©e l'id√©e, la fonctionnalit√© ou le probl√®me √† r√©soudre.
   - Clarifier l'objectif principal : "Quel probl√®me cherchons-nous √† r√©soudre pour qui ?"

2. **[PROCEDURE] Phase 2 : R√©daction de la User Story**
   - Formuler le besoin en utilisant le format standardis√© : `En tant que [type d'utilisateur], je veux [r√©aliser une action], afin de [obtenir un b√©n√©fice]`.
   - Cette formulation doit √™tre centr√©e sur l'utilisateur et la valeur, pas sur la solution technique.

3. **[PROCEDURE] Phase 3 : D√©finition des Crit√®res d'Acceptation**
   - Lister les conditions sp√©cifiques et testables qui, si elles sont remplies, confirmeront que la User Story est compl√©t√©e avec succ√®s.
   - Chaque crit√®re doit √™tre binaire (vrai/faux) et sans ambigu√Øt√©.

4. **[ANALYSE] Phase 4 : Validation "INVEST"**
   - √âvaluer le PBI fra√Æchement r√©dig√© par rapport aux crit√®res **INVEST**
     - **I - Ind√©pendant :** Le PBI doit √™tre aussi autonome que possible pour pouvoir √™tre d√©velopp√© et livr√© sans d√©pendre d'un autre PBI.
     - **N - N√©gociable :** Le PBI n'est pas un contrat fig√©. Il doit laisser de la place √† la discussion entre le Product Owner et l'√©quipe technique sur les d√©tails de l'impl√©mentation.
     - **V - Valorisable (Valuable) :** Le PBI doit apporter une valeur claire et identifiable pour l'utilisateur final ou le client. Si la valeur n'est pas √©vidente, il faut questionner la pertinence du PBI.
     - **E - Estimable :** L'√©quipe de d√©veloppement doit √™tre capable de donner une estimation de l'effort n√©cessaire pour r√©aliser le PBI. S'il est trop vague ou trop grand, il ne peut pas √™tre estim√©.
     - **S - Suffisamment petit (Small) :** Le PBI doit √™tre assez petit pour pouvoir √™tre r√©alis√© en une seule it√©ration (par exemple, un sprint). Les PBI trop gros ("√©pics") doivent √™tre d√©compos√©s.
     - **T - Testable :** Il doit √™tre possible de v√©rifier que le PBI est termin√©. Les crit√®res d'acceptation sont la cl√© pour rendre un PBI testable.
   - Si un crit√®re n'est pas rempli, it√©rer sur les √©tapes pr√©c√©dentes pour affiner le PBI (ex: le d√©couper en deux PBI plus petits).

**üõ´ PLAN DE VOL PBI (Obligatoire avant Phase 5)**

Avant la cr√©ation du fichier PBI, l'agent **doit** pr√©senter un plan d√©taill√© :

**[PLAN_DE_VOL_PBI]**
**Objectif :** Cr√©er un Product Backlog Item formel et tra√ßable
**Actions pr√©vues :**
1. G√©n√©ration de l'ID unique pour le PBI (v√©rification des IDs existants)
2. Cr√©ation du fichier `PBI-[ID]-PROPOSED.xml` dans `/docs/backlog/00-pbi/`
3. Remplissage de la structure obligatoire avec les donn√©es valid√©es INVEST
4. Application du template avec User Story, Crit√®res d'Acceptation et m√©tadonn√©es

**Fichiers affect√©s :**
- `/docs/backlog/00-pbi/PBI-[ID]-PROPOSED.xml` : cr√©ation

**Commandes syst√®me :**
- `aklo propose-pbi "[Titre]"` : automatisation de cr√©ation (optionnel)
- V√©rification de l'unicit√© de l'ID via listing du r√©pertoire PBI

**Outils MCP utilis√©s :**
- `mcp_desktop-commander_list_directory` : v√©rifier IDs existants
- `mcp_desktop-commander_write_file` : cr√©er le fichier PBI
- `mcp_aklo-terminal_aklo_execute` : commande aklo (si utilis√©e)

**Validation requise :** ‚úÖ OUI - Attente approbation explicite avant cr√©ation

5. **[CONCLUSION] Phase 5 : Formalisation**
   - **Action Requise :** 
      Cr√©er le fichier `PBI-[ID]-PROPOSED.xml` dans `/docs/backlog/00-pbi/` en respectant la structure obligatoire.
   - **‚ö° Automatisation `aklo` :** `aklo propose-pbi "[Titre du PBI]"`
   - [ATTENTE_VALIDATION] Pr√©senter le PBI finalis√© au `Human_Developer` pour approbation avant de passer au protocole [PLANIFICATION].
