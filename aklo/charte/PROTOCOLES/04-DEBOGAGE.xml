<?xml version="1.0" encoding="UTF-8"?>
<protocol name="debugging_and_bugfix">
    <description>
        This protocol is activated when a bug is identified. Its goal is to produce a traceable
        diagnosis and a validated fix, via the creation and management of a formal Debug Report
        artefact.
    </description>

    <section title="Mission and Deliverables">
        <sub_section title="Mission">
            <introduction>
                To systematically diagnose the root cause of an unexpected behavior, propose a
                validated fix plan, and supervise its implementation.
            </introduction>
        </sub_section>
        <sub_section title="Expected Deliverables">
            <deliverables>
                <deliverable type="debug_report">
                    A complete `DEBUG-[ID]-RESOLVED.xml` file, created in `/docs/backlog/04-debug/`.
                </deliverable>
                <deliverable type="fix_commit">
                    An atomic commit containing the fix and a regression test, produced by following
                    the [DEVELOPMENT] protocol.
                </deliverable>
            </deliverables>
        </sub_section>
    </section>

    <section title="Debug Artefact Management and Structure">
        <sub_section title="Naming Convention">
            <format>DEBUG-[ID]-[status].xml</format>
            <details>
                <detail name="id">A unique identifier generated from the title and date (e.g.,
                    `description-of-issue-20250629`).</detail>
                <detail name="status">The status of the investigation.</detail>
            </details>
        </sub_section>
        <sub_section title="Statuses">
            <list>
                <item name="investigating">Analysis in progress.</item>
                <item name="awaiting_fix">Root cause identified, fix plan awaiting Human_Developer
                    validation.</item>
                <item name="resolved">Fix implemented, validated, and committed.</item>
            </list>
        </sub_section>
        <sub_section title="Mandatory Artefact Structure">
            <artefact_template format="xml">
                <debug_report id="[id]" status="investigating" title="[Bug Title]">
                    <metadata>
                        <associated_task optional="true">TASK-[task_id]</associated_task>
                        <created_date>[date]</created_date>
                    </metadata>
                    <content>
                        <problem_description>
                            <observed_problem>Clear description of the unexpected behavior.</observed_problem>
                            <reproduction_steps>
                                <step number="1">Go to /login</step>
                                <step number="2">Enter valid credentials</step>
                                <step number="3">Click submit</step>
                            </reproduction_steps>
                        </problem_description>
                        <initial_hypotheses>
                            <hypothesis id="A">Backend API is down</hypothesis>
                            <hypothesis id="B">Database connection issue</hypothesis>
                        </initial_hypotheses>
                        <investigation_journal>
                            <iteration number="1" hypothesis="A">
                                <action>Instrumentation/logging action</action>
                                <results>Relevant logs/results</results>
                                <analysis>Interpretation of results</analysis>
                                <conclusion>Hypothesis validated/invalidated</conclusion>
                            </iteration>
                            <!-- More iterations as needed -->
                        </investigation_journal>
                        <root_cause_analysis>
                            Technical and precise description of the bug's root cause.
                        </root_cause_analysis>
                        <proposed_fix_plan>
                            Description of the technical solution to implement, including the
                            regression test to be written first.
                        </proposed_fix_plan>
                    </content>
                </debug_report>
            </artefact_template>
            <example>
                <debug_report id="login-failure-20250707" status="resolved"
                    title="Login fails with valid credentials">
                    <metadata>
                        <associated_task>TASK-101-3</associated_task>
                        <created_date>2025-07-07</created_date>
                    </metadata>
                    <content>
                        <problem_description>
                            <observed_problem>Login returns 500 error for valid users.</observed_problem>
                            <reproduction_steps>
                                <step>Go to /login</step>
                                <step>Enter valid credentials</step>
                                <step>Click submit</step>
                            </reproduction_steps>
                        </problem_description>
                        <initial_hypotheses>
                            <hypothesis>Backend API is down</hypothesis>
                            <hypothesis>Database connection issue</hypothesis>
                        </initial_hypotheses>
                        <investigation_journal>
                            <iteration number="1" hypothesis="Backend API is down">
                                <action>Check API logs</action>
                                <results>No errors found</results>
                                <analysis>API is up</analysis>
                                <conclusion>Hypothesis invalidated</conclusion>
                            </iteration>
                            <iteration number="2" hypothesis="Database connection issue">
                                <action>Add DB connection logs</action>
                                <results>Connection refused error</results>
                                <analysis>DB unreachable</analysis>
                                <conclusion>Hypothesis validated</conclusion>
                            </iteration>
                        </investigation_journal>
                        <root_cause_analysis>
                            Database credentials were rotated but not updated in the deployment
                            config.
                        </root_cause_analysis>
                        <proposed_fix_plan>
                            Update deployment config with new DB credentials. Write a regression
                            test to check DB connectivity on login.
                        </proposed_fix_plan>
                    </content>
                </debug_report>
            </example>
        </sub_section>
    </section>

    <section title="Debugging Procedure">
        <flight_plan required="true" name="DEBUGGING_FLIGHT_PLAN">
            <objective>Systematically diagnose and fix a bug in a traceable manner.</objective>
            <actions>
                <item>Generate a unique ID for the debug report</item>
                <item>Create the `DEBUG-[ID]-INVESTIGATING.xml` file in `/docs/backlog/04-debug/`</item>
                <item>Document the problem and reproduction steps</item>
                <item>Formulate initial hypotheses based on code analysis</item>
                <item>Iterative investigation with instrumentation (logs, tests, debugging)</item>
                <item>Identify the root cause</item>
                <item>Propose a fix plan with regression test</item>
                <item>Implement the fix via the [DEVELOPMENT] protocol after validation</item>
            </actions>
            <affected_files>
                <file type="creation/modification">/docs/backlog/04-debug/DEBUG-[ID]-INVESTIGATING.xml
                    → AWAITING_FIX → RESOLVED</file>
                <file type="modification">Source code files for temporary instrumentation</file>
                <file type="modification">Test files for validation and regression</file>
                <file type="modification">Other files as required by the diagnosis</file>
            </affected_files>
            <system_commands>
                <command optional="true">aklo debug "[Title]"</command>
                <command>Run tests to reproduce the bug</command>
                <command>Add temporary logs for investigation</command>
                <command>Use debugging tools as per the stack</command>
            </system_commands>
            <mcp_tools>
                <tool>mcp_desktop-commander_write_file</tool>
                <tool>mcp_desktop-commander_edit_block</tool>
                <tool>mcp_desktop-commander_execute_command</tool>
                <tool>mcp_aklo-terminal_aklo_execute</tool>
            </mcp_tools>
            <required_validation>YES - Explicit approval required before investigation.</required_validation>
        </flight_plan>
        <step number="1" title="Initialization">
            <description>
                Create a new `DEBUG-[ID]-INVESTIGATING.xml` file in `/docs/backlog/04-debug/`. Fill
                in the "Problem Description and Reproduction Steps" and "Initial Hypotheses"
                sections.
            </description>
            <automation optional="true">aklo debug "[Bug Title]"</automation>
        </step>
        <step number="2" title="Iterative Diagnosis">
            <description>
                Fill in the "Investigation Journal" iteratively. For each hypothesis, propose an
                instrumentation action, execute the scenario, paste the results, and analyze the
                conclusion. Repeat until the root cause is identified.
            </description>
        </step>
        <step number="3" title="Root Cause and Fix Plan">
            <description>
                Fill in the "Root Cause Analysis" and "Proposed Fix Plan" sections. Submit the
                complete report for Human_Developer validation. Change the report status to
                `AWAITING_FIX`.
            </description>
            <awaiting_validation>Submit the debug report for validation before proceeding to the
                fix.</awaiting_validation>
        </step>
        <step number="4" title="Fix Implementation and Resolution">
            <description>
                Once the fix plan is approved, activate the [DEVELOPMENT] protocol. Follow its
                procedure, starting with the regression test. After the [DEVELOPMENT] protocol's
                validation, update the debug report status to `RESOLVED`, activate [KNOWLEDGE-BASE]
                if relevant, and create the final commit.
            </description>
        </step>
    </section>
</protocol>