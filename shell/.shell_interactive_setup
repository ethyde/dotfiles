# ~/.shell_interactive_setup
# ==============================================================================
#      SCRIPTS POUR LES SESSIONS INTERACTIVES (Bash, Zsh, etc.)
#
#    Ce fichier est sourc√© par .bashrc et .zshrc pour assurer un
#    comportement identique au d√©marrage des sessions interactives.
# ==============================================================================


# ==============================================================================
#                      AUTO-CHARGEMENT DE L'AGENT SSH
#
#    V√©rifie l'√©tat de l'agent SSH et charge les cl√©s si n√©cessaire.
#    Affiche des messages pour informer l'utilisateur.
# ==============================================================================
# Chargement de l'agent SSH avec gestion intelligente de l'affichage
agent_load_env

# D√©termine si on doit afficher les messages (reload manuel vs d√©marrage auto)
should_show_ssh_status=false
if [[ "$DOTFILES_VERBOSE_SSH" == "true" ]] || [[ "$DOTFILES_MANUAL_RELOAD" == "true" ]]; then
    should_show_ssh_status=true
fi

if ! agent_is_running; then
    if [[ "$should_show_ssh_status" == "true" ]]; then
        echo "üöÄ D√©marrage de l'agent SSH..."
    fi
    agent_start >/dev/null 2>&1
    add_all_keys >/dev/null 2>&1
elif ! agent_has_keys; then
    if [[ "$should_show_ssh_status" == "true" ]]; then
        echo "üîë Chargement des cl√©s SSH..."
    fi
    add_all_keys >/dev/null 2>&1
fi

# Affichage du statut final
if [[ "$should_show_ssh_status" == "true" ]]; then
    if agent_is_running && agent_has_keys; then
        echo "‚úÖ Agent SSH pr√™t et cl√©s charg√©es"
    elif agent_is_running; then
        echo "‚ö†Ô∏è  Agent SSH actif mais aucune cl√© charg√©e"
    else
        echo "‚ùå Agent SSH non disponible"
    fi
fi

# ==============================================================================
#                      V√âRIFICATION INITIALE DE LA VERSION NODE.JS
#
#    V√©rifie s'il y a un .nvmrc dans le r√©pertoire courant au d√©marrage
#    et ajuste la version de Node.js en cons√©quence.
# ==============================================================================
# Gestion silencieuse de NVM au d√©marrage (pour √©viter les conflits avec Powerlevel10k)
if command -v nvm &> /dev/null; then
    local nvmrc_path
    nvmrc_path=$(nvm_find_up .nvmrc)
    
    if [[ -n "$nvmrc_path" ]]; then
        local nvmrc_version
        nvmrc_version=$(<"$nvmrc_path/.nvmrc")
        
        # Chargement silencieux
        if ! nvm use 2>/dev/null; then
            nvm install >/dev/null 2>&1
        fi
        
        # Affichage si demand√© explicitement ou reload manuel
        if [[ "$DOTFILES_VERBOSE_NVM" == "true" ]] || [[ "$DOTFILES_MANUAL_RELOAD" == "true" ]]; then
            echo "üìÅ .nvmrc d√©tect√©: $nvmrc_version"
            echo "üü¢ Node.js activ√©: $(nvm current)"
        fi
    fi
fi

# Nettoyer la variable de reload manuel apr√®s l'initialisation
unset DOTFILES_MANUAL_RELOAD 