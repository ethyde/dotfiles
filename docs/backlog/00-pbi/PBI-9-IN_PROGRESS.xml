# PBI-9 : √âtendre serveurs MCP shell natifs avec fonctionnalit√©s compl√®tes

## üìã Description

√âtendre les serveurs MCP shell natifs pour qu'ils offrent les m√™mes fonctionnalit√©s que les serveurs Node.js, rendant Node.js vraiment optionnel et renfor√ßant l'approche "native-first".

## üéØ Objectif M√©tier

- **Universalit√©** : Fonctionnalit√©s compl√®tes sur 100% des syst√®mes Unix
- **Simplicit√©** : 0 d√©pendances pour toutes les fonctionnalit√©s MCP
- **Performance** : Serveurs l√©gers et rapides
- **Coh√©rence** : Approche native-first r√©ellement effective

## üîç Analyse Actuelle

### Serveurs Shell Natifs (2 outils)
- `aklo_execute_shell` : Commandes aklo basiques
- `aklo_status_shell` : Statut projet simple

### Serveurs Node.js (4 outils)  
- `aklo_execute` : Commandes aklo avec validation avanc√©e
- `aklo_status` : Statut projet d√©taill√©
- `safe_shell` : Ex√©cution shell s√©curis√©e
- `project_info` : Informations projet compl√®tes

## üéØ Fonctionnalit√©s √† Ajouter

### 1. Ex√©cution Shell S√©curis√©e (`safe_shell`)
- Liste de commandes autoris√©es
- Validation des arguments
- Timeout configurable
- Gestion d'erreurs robuste

### 2. Informations Projet (`project_info`)
- Lecture package.json (avec parsing JSON natif)
- Informations Git (branch, status, remote)
- Configuration Aklo (.aklo.conf)
- M√©triques projet (PBI count, tasks, etc.)

### 3. Validation Avanc√©e Commandes Aklo
- Liste compl√®te des commandes autoris√©es
- Validation des arguments
- Gestion contexte de travail
- Logs s√©curis√©s

## üõ†Ô∏è Approche Technique

### Parsing JSON en Shell Natif
```bash
# Option 1: jq si disponible (fallback si absent)
# Option 2: parsing manuel avec sed/grep/awk
# Option 3: parsing hybride selon complexit√©
```

### S√©curit√© Shell
```bash
ALLOWED_COMMANDS=("ls" "cat" "grep" "find" "git" "npm" "node")
validate_command() {
    # Validation whitelist + arguments
}
```

### Gestion Timeout
```bash
execute_with_timeout() {
    timeout "$TIMEOUT" "$@" 2>&1
}
```

## üìä Crit√®res d'Acceptation

- [ ] Serveurs shell natifs offrent les 4 outils des serveurs Node.js
- [ ] Parsing JSON natif fonctionnel (avec fallback jq)
- [ ] S√©curit√© √©quivalente aux serveurs Node.js
- [ ] Performance sup√©rieure aux serveurs Node.js
- [ ] Tests complets pour tous les outils
- [ ] Documentation mise √† jour
- [ ] R√©trocompatibilit√© pr√©serv√©e

## üîó D√©pendances

- Aucune d√©pendance externe requise
- Compatible avec tous les syst√®mes Unix
- Optionnel : `jq` pour parsing JSON avanc√©

## üìà Impact Attendu

- **Adoption** : +100% (fonctionne partout)
- **Performance** : +50% (pas de Node.js)
- **Simplicit√©** : +200% (0 d√©pendances)
- **Maintenance** : +100% (code shell standard)

## üóìÔ∏è Estimation

**Complexit√©** : Moyenne (3-4 jours)
**Priorit√©** : Haute (coh√©rence architecture native-first)

## 5. Tasks Associ√©es

- [ ] **[TASK-9-1](../01-tasks/TASK-9-1-TODO.xml)** : Impl√©mentation outil `safe_shell` en shell natif
  - *Revue Architecturale Requise : OUI*
  - *Complexit√© : MOYENNE - S√©curit√© et validation*

- [ ] **[TASK-9-2](../01-tasks/TASK-9-2-TODO.xml)** : Impl√©mentation outil `project_info` avec parsing JSON natif
  - *Revue Architecturale Requise : OUI*
  - *Complexit√© : HAUTE - Parsing JSON critique*

- [ ] **[TASK-9-3](../01-tasks/TASK-9-3-TODO.xml)** : Extension outil `aklo_execute` avec validation avanc√©e
  - *Revue Architecturale Requise : NON*
  - *Complexit√© : MOYENNE - Extension fonctionnelle*

- [ ] **[TASK-9-4](../01-tasks/TASK-9-4-TODO.xml)** : Extension outil `aklo_status` avec m√©triques d√©taill√©es
  - *Revue Architecturale Requise : NON*
  - *Complexit√© : MOYENNE - M√©triques et analyse*

- [ ] **[TASK-9-5](../01-tasks/TASK-9-5-TODO.xml)** : Tests d'int√©gration et validation de performance
  - *Revue Architecturale Requise : NON*
  - *Complexit√© : MOYENNE - Tests et benchmarks*

- [ ] **[TASK-9-6](../01-tasks/TASK-9-6-TODO.xml)** : Configuration et documentation de l'architecture hybride
  - *Revue Architecturale Requise : NON*
  - *Complexit√© : FAIBLE - Documentation et configuration*

**Recommandation :** 2 tasks (9-1, 9-2) n√©cessitent une revue architecturale avant d√©veloppement.

---

**Status** : IN_PROGRESS
**Created** : 2025-01-28
**Owner** : Architecture Team