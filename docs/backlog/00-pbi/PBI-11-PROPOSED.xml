# PBI-11 : Cr√©er serveur MCP documentation shell natif √©tendu

## üìã Description

√âtendre le serveur MCP documentation shell natif pour qu'il offre toutes les fonctionnalit√©s du serveur Node.js, incluant la validation d'artefacts et la recherche avanc√©e.

## üéØ Objectif M√©tier

- **Parit√© fonctionnelle** : M√™mes capacit√©s que le serveur Node.js
- **Performance** : Serveur l√©ger et rapide
- **Universalit√©** : Fonctionne sur tous les syst√®mes Unix
- **Maintenance** : Code shell standard, facile √† d√©boguer

## üîç Analyse Actuelle

### Serveur Shell Actuel (3 outils)
- `read_protocol_shell` : Lecture protocoles basique
- `list_protocols_shell` : Liste protocoles
- `search_documentation_shell` : Recherche simple

### Serveur Node.js (7 outils)
- `read_protocol` : Lecture protocoles avec sections
- `list_protocols` : Liste avec m√©tadonn√©es
- `search_documentation` : Recherche avec scope
- `read_artefact` : Lecture artefacts avec m√©tadonn√©es
- `project_documentation_summary` : R√©sum√© complet
- `validate_artefact` : Validation selon protocoles
- `server_info` : Informations serveur

## üéØ Fonctionnalit√©s √† Ajouter

### 1. Lecture Artefacts (`read_artefact`)
- Parsing des en-t√™tes d'artefacts
- Extraction m√©tadonn√©es (status, dates, owner)
- Support tous types (PBI, TASK, DEBUG, etc.)
- Validation format basique

### 2. Validation Artefacts (`validate_artefact`)
- Validation structure selon protocoles
- V√©rification champs obligatoires
- Contr√¥le coh√©rence (dates, status, etc.)
- Rapport de validation d√©taill√©

### 3. R√©sum√© Documentation (`project_documentation_summary`)
- Scan complet r√©pertoire documentation
- Comptage artefacts par type et status
- M√©triques projet (v√©locit√©, qualit√©)
- G√©n√©ration rapport structur√©

### 4. Recherche Avanc√©e
- Recherche avec scope (protocols/artefacts/all)
- Filtrage par type d'artefact
- Recherche dans m√©tadonn√©es
- R√©sultats avec contexte

## üõ†Ô∏è Approche Technique

### Parsing M√©tadonn√©es Artefacts
```bash
extract_metadata() {
    local file="$1"
    # Extraction en-t√™te YAML/Markdown
    # Status, dates, owner, type
    # Validation format
}
```

### Validation Protocoles
```bash
validate_pbi() {
    # V√©rification structure PBI
    # Champs obligatoires
    # Coh√©rence business
}

validate_task() {
    # V√©rification structure TASK
    # Lien PBI parent
    # Crit√®res acceptation
}
```

### Recherche Multi-Scope
```bash
search_with_scope() {
    local query="$1"
    local scope="$2"  # protocols|artefacts|all
    
    case "$scope" in
        "protocols") search_protocols "$query" ;;
        "artefacts") search_artefacts "$query" ;;
        "all") search_all "$query" ;;
    esac
}
```

### G√©n√©ration R√©sum√©s
```bash
generate_project_summary() {
    # Scan docs/backlog/
    # Comptage par type/status
    # M√©triques temporelles
    # Format JSON/Markdown
}
```

## üìä Crit√®res d'Acceptation

- [ ] 7 outils √©quivalents au serveur Node.js
- [ ] Parsing m√©tadonn√©es artefacts fonctionnel
- [ ] Validation compl√®te selon protocoles Aklo
- [ ] Recherche avanc√©e avec scopes
- [ ] G√©n√©ration r√©sum√©s projet automatique
- [ ] Performance √©quivalente ou sup√©rieure
- [ ] Tests complets pour tous les outils
- [ ] Documentation mise √† jour

## üîó D√©pendances

- Acc√®s aux protocoles Aklo (charte/)
- Structure projet Aklo standard
- Optionnel : `jq` pour JSON complexe

## üìà Impact Attendu

- **Fonctionnalit√©s** : +100% (parit√© Node.js)
- **Performance** : +30% (pas d'overhead Node.js)
- **Adoption** : +200% (0 d√©pendances)
- **Maintenance** : +150% (shell standard)

## üîß Impl√©mentation Technique

### Structure Serveur √âtendu
```bash
#!/bin/sh
# Serveur MCP Documentation Aklo - Version Compl√®te

# 7 outils disponibles
handle_tool_call() {
    case "$tool_name" in
        "read_protocol") handle_read_protocol ;;
        "list_protocols") handle_list_protocols ;;
        "search_documentation") handle_search_documentation ;;
        "read_artefact") handle_read_artefact ;;
        "validate_artefact") handle_validate_artefact ;;
        "project_documentation_summary") handle_project_summary ;;
        "server_info") handle_server_info ;;
    esac
}
```

## üóìÔ∏è Estimation

**Complexit√©** : Moyenne-Haute (5-6 jours)
**Priorit√©** : Haute (parit√© fonctionnelle)

---

**Status** : PROPOSED
**Created** : 2025-01-28
**Owner** : Documentation Team