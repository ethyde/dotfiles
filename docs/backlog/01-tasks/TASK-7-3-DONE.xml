<task pbi_id="7" task_id="3" status="done" title="Optimisation de la fonction get_next_id">
  <metadata>
    <parent_pbi>PBI-7</parent_pbi>
    <arch_review_required>no</arch_review_required>
    <assignee>[Nom du Human_Developer]</assignee>
    <git_branch>feature/task-7-3</git_branch>
  </metadata>
  <content>
    <technical_objective>
      Optimiser la fonction <code>get_next_id()</code> en implémentant un cache des derniers IDs calculés pour éviter les opérations <code>ls</code> répétitives et améliorer les performances lors de la création d'artefacts multiples.
    </technical_objective>
    <context_and_files>
      Fichiers concernés :
      <ul>
        <li>aklo/bin/aklo : Fonction get_next_id() ligne 522-528</li>
        <li>aklo/bin/aklo_cache_functions.sh : Infrastructure de cache existante</li>
      </ul>
      Fonction actuelle :
      <code language="bash"><![CDATA[
get_next_id() {
  SEARCH_PATH="$1"
  PREFIX="$2"
  LAST_ID=$(ls "${SEARCH_PATH}/${PREFIX}"*-*.xml 2>/dev/null | sed -n "s/.*${PREFIX}\([0-9]*\)-.*/\1/p" | sort -n | tail -1 || echo 0)
  NEXT_ID=$((LAST_ID + 1))
  echo "$NEXT_ID"
}
      ]]></code>
    </context_and_files>
    <ai_agent_instructions>
      <description>Implémenter le cache d'ID, l'invalidation, les métriques et documenter les fonctions.</description>
      <step number="1">Créer un cache global des IDs avec clé <code>${SEARCH_PATH}_${PREFIX}</code>.</step>
      <step number="2">Implémenter <code>get_next_id_cached()</code> qui utilise le cache.</step>
      <step number="3">Ajouter une fonction <code>invalidate_id_cache()</code> pour invalider le cache.</step>
      <step number="4">Créer <code>update_id_cache()</code> pour mettre à jour après création d'artefact.</step>
      <step number="5">Implémenter la détection de changements externes pour invalidation.</step>
      <step number="6">Ajouter des métriques de hits/misses du cache.</step>
      <step number="7">Créer des tests unitaires pour valider le comportement.</step>
      <step number="8">Documenter les fonctions et leur utilisation.</step>
    </ai_agent_instructions>
    <definition_of_done>
      <criterion state="done">Cache des IDs implémenté avec clés composites</criterion>
      <criterion state="done">Fonction get_next_id_cached() créée et fonctionnelle</criterion>
      <criterion state="done">Système d'invalidation du cache implémenté</criterion>
      <criterion state="done">Détection de changements externes pour invalidation</criterion>
      <criterion state="done">Métriques de performance intégrées</criterion>
      <criterion state="done">Tests unitaires écrits et passent avec succès</criterion>
      <criterion state="done">Performance améliorée de 50-70% sur opérations répétitives</criterion>
      <criterion state="done">Compatibilité avec la fonction existante maintenue</criterion>
    </definition_of_done>
  </content>
</task>